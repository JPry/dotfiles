[user]
	name = Jeremy Pry
	email = jeremy.pry@gmail.com
[core]
	editor = "nano"
	excludesfile = /espdc/.gitignore_global
	commentChar = $
	whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
	quotepath = false
[color]
	branch = auto
	diff = auto
	interactive = auto
	status = auto
	ui = true
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold
[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[alias]
	# add
	a = add                           # add
	chunkyadd = add --patch           # stage commits chunk by chunk
	
	# branch
	b = branch -vv                    # branch (very verbose)
	
	# commit
	c = commit -m                     # commit with message
	ca = commit -am                   # commit all with message
	ci = commit                       # commit
	amend = commit --amend            # ammend your last commit
	ammend = commit --amend           # ammend your last commit
	
	# checkout
	co = checkout                     # checkout
	cot = checkout --track            # checkout and track
	nb = checkout -b                  # create and switch to a new branch (mnemonic: "git new branch branchname...")
	
	# cherry-pick
	cp = cherry-pick -x               # grab a change from a branch
	
	# diff
	d = diff                          # diff unstaged changes
	dc = diff --cached                # diff staged changes
	last = diff HEAD^                 # diff last committed change
	
	# log
	log = log --decorate --graph --date=short
	l = log
	changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
	short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
	changelog = log --pretty=format:\" * %s\"
	shortnocolor = log --pretty=format:\"%h %cr %cn %s\"
	
	# pull
	pl = pull                         # pull
	
	# pull-request
	pr = pull-request                 # pull-request
	
	# push
	ps = push                         # push
	pu = push --set-upstream          # Push and set upstream tracking
	
	# rebase
	rc = rebase --continue            # continue rebase
	rs = rebase --skip                # skip rebase
	
	# remote
	r = remote -v                     # show remotes (verbose)
	ra = remote add		        	  # add remote
	
	# reset
	unstage = reset HEAD              # remove files from index (tracking)
	uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
	filelog = log -u                  # show changes to a file
	mt = mergetool                    # fire up the merge tool
	
	# stash
	ss = stash                        # stash changes
	sl = stash list                   # list stashes
	sa = stash apply                  # apply stash (restore changes)
	sd = stash drop                   # drop stashes (destory changes)
	
	# status
	s = status                        # status
	st = status                       # status
	stat = status                     # status
	
	# tag
	t = tag -n                        # show tags with <n> lines of each tag message
	
	# svn helpers
	svn-diff = !git-svn-diff
	svnr = svn rebase
	svnd = svn dcommit
	svnl = svn log --oneline --show-commit
[apply]
	whitespace = nowarn
[format]
	pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset
[merge]
	summary = true
	verbosity = 1
[mirror]
	summary = true
[branch]
	autosetupmerge = true
[push]
	# 'git push' will push the current branch to its tracking branch
	# the usual default is to push all branches
	default = tracking
[diff]
	# Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
	# instead of a/b/c/d as prefixes for patches
	mnemonicprefix = true
[rerere]
	# Remember my merges
	# http://gitfu.wordpress.com/2008/04/20/git-rerere-rereremember-what-you-did-last-time/
	enabled = true
[credential]
	helper = osxkeychain
[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f
